#+title: nursery
#+author: Chris Barrett
#+todo: SPIKE(s) INCUBATING(i) | STABLE(t) PUBLISHED(p)

This is a repository for Emacs Lisp packages that I think could be useful for
friends and coworkers. It's an experimental, low-pressure space for me just to
hack on Lisp with the garage door open.

If something reaches a stable state I may publish it if there's interest.

* Objects of interest
This repository contains a mix of supporting libraries and things that are
actually useful.

** INCUBATING [[file:lisp/org-roam-review.el][org-roam-review]]
Implements a system for managing [[https://maggieappleton.com/evergreens][Evergreen Notes]] on top of org-roam. Provides a
spaced-repetition system that prompts you to review notes or revisit stubs and
help them grow to maturity.

** INCUBATING [[file:lisp/org-roam-links.el][org-roam-links]]
Display a tree of backlinks /and/ forward links up to a configurable depth. Useful
for looking for unexpected connections without busting open a full-fledged graph
UI. Contrasts with the normal org-roam buffer, which only shows backlinks.

** INCUBATING [[file:lisp/org-roam-search.el][org-roam-search]]
Search your org-roam files for a string and display a buffer of results. Results
are shown with collapsible previews, like in the org-roam buffer.

** INCUBATING [[file:lisp/org-roam-consult.el][org-roam-consult]]
A version of =consult-ripgrep= that shows node titles instead of filenames so you
don't have to guess anymore.

** SPIKE [[file:lisp/org-roam-gc.el][org-roam-gc]]
Automatically delete empty dailies files so they don't build up forever.

** SPIKE [[file:lisp/org-roam-rewrite.el][org-roam-rewrite]]
Commands for renaming nodes, rewriting links and deleting nodes with redirection
so you can refactor notes without leaving broken links.

** INCUBATING [[file:lisp/org-roam-dblocks.el][org-roam-dblocks]]
Add org dynamic blocks that implement "canned searches" for org-roam. You can
search for notes or list backlinks, then do additional filtering based on title
or tags.

* Installation
Most packages should be manually installable via =package.el=, assuming you have
[[https://melpa.org/#/getting-started][MELPA]] set up. But honestly, you're better off just cloning and putting this
repo's lisp directory in your load path, and manually installing anything that's
missing off MELPA.
